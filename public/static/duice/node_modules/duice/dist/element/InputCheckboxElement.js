import { getElementAttribute } from "../common";
import { InputElement } from "./InputElement";
/**
 * Input Checkbox Element
 */
export class InputCheckboxElement extends InputElement {
    /**
     * Constructor
     * @param htmlElement html element
     * @param bindData bind data
     * @param context context
     */
    constructor(htmlElement, bindData, context) {
        super(htmlElement, bindData, context);
        this.trueValue = true;
        this.falseValue = false;
        // true false value
        let trueValue = getElementAttribute(this.getHtmlElement(), 'true-value');
        this.trueValue = trueValue ? trueValue : this.trueValue;
        let falseValue = getElementAttribute(this.getHtmlElement(), 'false-value');
        this.falseValue = falseValue ? falseValue : this.falseValue;
    }
    /**
     * Sets element value
     * @param value element value
     */
    setValue(value) {
        if (value === this.trueValue) {
            this.getHtmlElement().checked = true;
        }
        else {
            this.htmlElement.checked = false;
        }
    }
    /**
     * Gets value
     */
    getValue() {
        if (this.htmlElement.checked) {
            return this.trueValue;
        }
        else {
            return this.falseValue;
        }
    }
    /**
     * Disable click
     * @param event event
     */
    disableClick(event) {
        event.preventDefault();
    }
    /**
     * Sets readonly
     * @param readonly readonly or not
     */
    setReadonly(readonly) {
        if (readonly) {
            this.getHtmlElement().addEventListener('click', this.disableClick);
        }
        else {
            this.getHtmlElement().removeEventListener('click', this.disableClick);
        }
    }
}
//# sourceMappingURL=InputCheckboxElement.js.map