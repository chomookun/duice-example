import { ObjectElement } from "../ObjectElement";
import { Observable } from "../Observable";
import { Event } from "../event/Event";
/**
 * Select Element
 */
export declare class SelectElement extends ObjectElement<HTMLSelectElement> {
    option: object[];
    optionValueProperty: string;
    optionTextProperty: string;
    defaultOptions: HTMLOptionElement[];
    /**
     * Constructor
     * @param htmlElement html element
     * @param bindData bind data
     * @param context context
     */
    constructor(htmlElement: HTMLSelectElement, bindData: object, context: object);
    /**
     * Updates options
     */
    updateOptions(): void;
    /**
     * Overrides update
     * @param observable observable
     * @param event event
     */
    update(observable: Observable, event: Event): void;
    /**
     * Sets element value
     * @param value value
     */
    setValue(value: any): void;
    /**
     * Gets element value
     */
    getValue(): any;
    /**
     * Sets readonly
     * @param readonly readonly or not
     */
    setReadonly(readonly: boolean): void;
    /**
     * Sets disable
     * @param disable disable or not
     */
    setDisable(disable: boolean): void;
}
