/**
 * Gets element query selector
 */
export declare function getElementQuerySelector(): string;
/**
 * Marks element as initialized
 * @param container container
 */
export declare function markInitialized(container: any): void;
/**
 * Finds variable in current scope
 * @param context current context
 * @param name variable name
 */
export declare function findVariable(context: object, name: string): any;
/**
 * Runs code
 * @param code
 * @param htmlElement
 * @param context
 */
export declare function runCode(code: string, htmlElement: HTMLElement, context: object): boolean;
/**
 * Runs if code
 * @param htmlElement html element
 * @param context current context
 */
export declare function runIfCode(htmlElement: HTMLElement, context: object): boolean;
/**
 * Runs execute code
 * @param htmlElement html element
 * @param context current context
 */
export declare function runExecuteCode(htmlElement: HTMLElement, context: object): boolean;
/**
 * Checks if element has attribute
 * @param htmlElement html element
 * @param name attribute name
 */
export declare function hasElementAttribute(htmlElement: HTMLElement, name: string): boolean;
/**
 * Gets element attribute
 * @param htmlElement html element
 * @param name attribute name
 */
export declare function getElementAttribute(htmlElement: HTMLElement, name: string): string;
/**
 * Sets element attribute
 * @param htmlElement html element
 * @param name attribute name
 * @param value attribute value
 */
export declare function setElementAttribute(htmlElement: HTMLElement, name: string, value: string): void;
/**
 * Asserts condition
 * @param condition condition
 * @param message assertion message
 */
export declare function assert(condition: any, message?: string): void;
