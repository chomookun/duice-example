/**
 * Observable
 */
export class Observable {
    constructor() {
        this.observers = [];
        this.notifyEnabled = true;
    }
    /**
     * Adds observer
     * @param observer observer
     */
    addObserver(observer) {
        this.observers.push(observer);
    }
    /**
     * Removes observer
     * @param observer observer
     */
    removeObserver(observer) {
        for (let i = 0, size = this.observers.length; i < size; i++) {
            if (this.observers[i] === observer) {
                this.observers.splice(i, 1);
                return;
            }
        }
    }
    /**
     * Suspends notify
     */
    suspendNotify() {
        this.notifyEnabled = false;
    }
    /**
     * Resumes notify
     */
    resumeNotify() {
        this.notifyEnabled = true;
    }
    /**
     * Notifies to observers
     * @param event event
     */
    notifyObservers(event) {
        if (this.notifyEnabled) {
            this.observers.forEach(observer => {
                observer.update(this, event);
            });
        }
    }
}
//# sourceMappingURL=Observable.js.map