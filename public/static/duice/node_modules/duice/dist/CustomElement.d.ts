import { Element } from "./Element";
import { Observable } from "./Observable";
import { Event } from "./event/Event";
/**
 * Custom Element
 */
export declare abstract class CustomElement<V> extends Element<HTMLElement, V> {
    protected constructor(htmlElement: HTMLElement, bindData: V, context: object);
    /**
     * Renders element
     */
    render(): void;
    /**
     * Abstract do Render method
     * @param data data
     */
    abstract doRender(data: V): void;
    /**
     * Implements update method
     * @param observable observable
     * @param event event
     */
    update(observable: Observable, event: Event): void;
    /**
     * Abstract do update method
     * @param data data
     */
    abstract doUpdate(data: V): void;
}
