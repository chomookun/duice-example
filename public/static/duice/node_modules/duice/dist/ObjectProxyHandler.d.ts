import { ProxyHandler } from "./ProxyHandler";
import { Observable } from "./Observable";
import { Event } from "./event/Event";
/**
 * Object Proxy Handler
 */
export declare class ObjectProxyHandler extends ProxyHandler<object> {
    propertyChangingListener: Function;
    propertyChangedListener: Function;
    /**
     * Constructor
     */
    constructor();
    /**
     * Gets target property value
     * @param target target
     * @param property property
     * @param receiver receiver
     */
    get(target: object, property: string, receiver: object): any;
    /**
     * Sets target property value
     * @param target
     * @param property
     * @param value
     */
    set(target: object, property: string, value: any): boolean;
    /**
     * Updates
     * @param observable observable
     * @param event event
     */
    update(observable: Observable, event: Event): void;
    /**
     * Gets specified property value
     * @param property property
     */
    getValue(property: string): any;
    /**
     * Sets specified property value
     * @param property property
     * @param value value
     */
    setValue(property: string, value: any): void;
    /**
     * Sets focus on property element
     * @param property
     */
    focus(property: string): void;
}
