import { ArrayElementFactory } from "./ArrayElementFactory";
import { ElementFactory } from "./ElementFactory";
import { CustomElementFactory } from "./CustomElementFactory";
import { ObjectElementFactory } from "./ObjectElementFactory";
/**
 * Element Registry
 */
export declare class ElementRegistry {
    static defaultObjectElementFactory: ObjectElementFactory<HTMLElement>;
    static defaultArrayElementFactory: ArrayElementFactory<HTMLElement>;
    static objectElementFactories: Map<string, ObjectElementFactory<HTMLElement>>;
    static arrayElementFactories: Map<string, ArrayElementFactory<HTMLElement>>;
    static customElementFactories: Map<string, CustomElementFactory<any>>;
    /**
     * Registers element factory
     * @param tagName tag name
     * @param elementFactory element factory
     */
    static register(tagName: string, elementFactory: ElementFactory<HTMLElement, any>): void;
    /**
     * Gets factory
     * @param htmlElement html element
     * @param bindData bind data
     * @param context context
     */
    static getFactory(htmlElement: HTMLElement, bindData: any, context: object): ElementFactory<HTMLElement, any>;
}
